# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://ak
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions
name: Build and deploy Python app to Azure Web App - EcoBinLocator
on:
  push:
    branches:
      - production
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          set -ex
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install ./google-chrome-stable_current_amd64.deb
          python -m pip install --upgrade pip
          pip install -r Projeto_EcoBinLocator/requirements.txt
      - uses: nanasess/setup-chromedriver@v2
      - run: |
          chromedriver --url-base=/wd/hub &
      - name: Run local Server
        run: |
          cd Projeto_EcoBinLocator/
          python manage.py runserver &
          sleep 5
          python manage.py test

      - name: Cleaning testing files
        run: |
          cd Projeto_EcoBinLocator/
          rm .env
          cd ..

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            Projeto_EcoBinLocator
            !venv/
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
          
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'EcoBinLocator'
          slot-name: 'Production'
          publish-profile: ${{ <publishData><publishProfile profileName="ecobinlocator - Web Deploy" publishMethod="MSDeploy" publishUrl="ecobinlocator.scm.azurewebsites.net:443" msdeploySite="ecobinlocator" userName="$ecobinlocator" userPWD="oi3JRZl4iLhnqd0uDXrQ7f3vcgKhybfQCMayPKwuPJ7uNSnyBcWnEnkWnwKb" destinationAppUrl="https://ecobinlocator.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="ecobinlocator - FTP" publishMethod="FTP" publishUrl="ftps://waws-prod-cq1-045.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="ecobinlocator\$ecobinlocator" userPWD="oi3JRZl4iLhnqd0uDXrQ7f3vcgKhybfQCMayPKwuPJ7uNSnyBcWnEnkWnwKb" destinationAppUrl="https://ecobinlocator.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="ecobinlocator - Zip Deploy" publishMethod="ZipDeploy" publishUrl="ecobinlocator.scm.azurewebsites.net:443" userName="$ecobinlocator" userPWD="oi3JRZl4iLhnqd0uDXrQ7f3vcgKhybfQCMayPKwuPJ7uNSnyBcWnEnkWnwKb" destinationAppUrl="https://ecobinlocator.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>}}